name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Read version from webhook.version file
        id: get_version
        run: echo "version=$(cat webhook.version)" >> $GITHUB_OUTPUT

  build-amd64:
    name: Build for linux/amd64
    runs-on: ubuntu-latest
    needs: get-version
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,suffix=-amd64
            type=raw,value=${{ needs.get-version.outputs.version }},suffix=-amd64

      - name: Build and push amd64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  build-arm64:
    name: Build for linux/arm64
    runs-on: ubuntu-24.04-arm
    needs: get-version
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,suffix=-arm64
            type=raw,value=${{ needs.get-version.outputs.version }},suffix=-arm64

      - name: Build and push arm64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  create-manifest:
    name: Create multi-arch manifest
    runs-on: ubuntu-latest
    needs: [get-version, build-amd64, build-arm64]
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.get-version.outputs.version }}

      - name: Create and push manifest list
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            echo "Processing tag: $tag"
            docker manifest create "$tag" \
              --amend "${tag}-amd64" \
              --amend "${tag}-arm64"
            docker manifest push "$tag"
          done
